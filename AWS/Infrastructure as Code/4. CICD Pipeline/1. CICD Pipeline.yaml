AWSTemplateFormatVersion: '2010-09-09'
Description: >
  CloudFormation template - CI/CD Pipeline for deploying FastAPI app to EC2 instance
  Created by Theodor Harmse for University of Liverpool -
  Uses public GitHub source (via AWS CodeStar Connections), CodeBuild for packaging,
  and CodeDeploy for in-place EC2 deployment.

Parameters:

  AppName:
    Type: String
    Default: uol-apiservice
    Description: Name of the application (used for naming resources, must be lowercase)

  GitHubOwner:
    Type: String
    Default: THarmse
    Description: GitHub user or organization owning the repository (public)

  GitHubRepo:
    Type: String
    Default: AWSDatabasePerformance
    Description: GitHub repository name (public)

  GitHubBranch:
    Type: String
    Default: main
    Description: Branch to watch for changes

  GitHubConnectionArn:
    Type: String
    Default: arn:aws:codeconnections:eu-west-1:057088884102:connection/9d302141-dbc8-4488-bacc-3d49a734a84a
    Description: ARN of the AWS CodeStar Connection to GitHub (must be in AVAILABLE state)

  EC2TagKey:
    Type: String
    Default: CodeDeployRole
    Description: EC2 instance tag key to target

  EC2TagValue:
    Type: String
    Default: AppServer
    Description: EC2 instance tag value to target

Resources:

  # IAM Role for AWS CodeDeploy
  CodeDeployServiceRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub "${AppName}-codedeploy-role"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: codedeploy.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: CodeDeployPolicy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - ec2:Describe*
                  - tag:Get*
                  - s3:Get*
                  - s3:GetObject*
                  - s3:ListBucket*
                Resource: "*"
      Tags:
        - Key: Name
          Value: !Sub "${AppName}-codedeploy-role"

  # CodeDeploy Application
  CodeDeployApplication:
    Type: AWS::CodeDeploy::Application
    Properties:
      ApplicationName: !Sub "${AppName}-codedeploy-app"
      ComputePlatform: Server

  # CodeDeploy Deployment Group
  CodeDeployDeploymentGroup:
    Type: AWS::CodeDeploy::DeploymentGroup
    Properties:
      ApplicationName: !Ref CodeDeployApplication
      DeploymentGroupName: !Sub "${AppName}-deployment-group"
      ServiceRoleArn: !GetAtt CodeDeployServiceRole.Arn
      DeploymentConfigName: CodeDeployDefault.OneAtATime
      Ec2TagFilters:
        - Key: !Ref EC2TagKey
          Value: !Ref EC2TagValue
          Type: KEY_AND_VALUE
      DeploymentStyle:
        DeploymentType: IN_PLACE
        DeploymentOption: WITHOUT_TRAFFIC_CONTROL
      AutoRollbackConfiguration:
        Enabled: true
        Events:
          - DEPLOYMENT_FAILURE

  # S3 Bucket for Pipeline Artifacts (forces lower case)
  CodePipelineArtifactBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub "${AWS::StackName}-${AWS::AccountId}-${AWS::Region}-artifacts"

  # IAM Role for AWS CodePipeline
  CodePipelineRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub "${AppName}-codepipeline-role"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: codepipeline.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: CodePipelinePolicy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - s3:*
                  - codebuild:*
                  - codedeploy:*
                  - iam:PassRole
                Resource: "*"
              - Effect: Allow
                Action:
                  - codestar-connections:UseConnection
                Resource: !Ref GitHubConnectionArn
      Tags:
        - Key: Name
          Value: !Sub "${AppName}-codepipeline-role"

  # IAM Role for AWS CodeBuild
  CodeBuildRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub "${AppName}-codebuild-role"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: codebuild.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: CodeBuildPolicy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - s3:*
                  - codedeploy:*
                  - logs:*
                Resource: "*"
      Tags:
        - Key: Name
          Value: !Sub "${AppName}-codebuild-role"

  # CodeBuild Project
  CodeBuildProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: !Sub "${AppName}-codebuild-project"
      ServiceRole: !GetAtt CodeBuildRole.Arn
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/standard:6.0
        Type: LINUX_CONTAINER
        EnvironmentVariables:
          - Name: ENV
            Value: production
      Source:
        Type: CODEPIPELINE
      TimeoutInMinutes: 30
      Tags:
        - Key: Name
          Value: !Sub "${AppName}-codebuild-project"

  # AWS CodePipeline
  CodePipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      Name: !Sub "${AppName}-pipeline"
      RoleArn: !GetAtt CodePipelineRole.Arn
      ArtifactStore:
        Type: S3
        Location: !Ref CodePipelineArtifactBucket
      Stages:
        - Name: Source
          Actions:
            - Name: GitHubSource
              ActionTypeId:
                Category: Source
                Owner: AWS
                Provider: CodeStarSourceConnection
                Version: 1
              OutputArtifacts:
                - Name: SourceOutput
              Configuration:
                ConnectionArn: !Ref GitHubConnectionArn
                FullRepositoryId: !Sub "${GitHubOwner}/${GitHubRepo}"
                BranchName: !Ref GitHubBranch
                DetectChanges: true
              RunOrder: 1
        - Name: Build
          Actions:
            - Name: CodeBuild
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: 1
              InputArtifacts:
                - Name: SourceOutput
              OutputArtifacts:
                - Name: BuildOutput
              Configuration:
                ProjectName: !Ref CodeBuildProject
              RunOrder: 1
        - Name: Deploy
          Actions:
            - Name: CodeDeploy
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CodeDeploy
                Version: 1
              InputArtifacts:
                - Name: BuildOutput
              Configuration:
                ApplicationName: !Ref CodeDeployApplication
                DeploymentGroupName: !Ref CodeDeployDeploymentGroup
              RunOrder: 1

Outputs:

  PipelineName:
    Description: Name of the CodePipeline
    Value: !Ref CodePipeline

  CodeDeployApplicationName:
    Description: Name of the CodeDeploy Application
    Value: !Ref CodeDeployApplication

  DeploymentGroupName:
    Description: Name of the CodeDeploy Deployment Group
    Value: !Ref CodeDeployDeploymentGroup

  ArtifactBucketName:
    Description: S3 bucket used for storing pipeline artifacts
    Value: !Ref CodePipelineArtifactBucket
